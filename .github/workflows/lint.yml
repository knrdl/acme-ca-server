name: Code Lint

on:
  push:
    branches:
      - main
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]

jobs:
  hadolint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          
  python:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install flake8 flake8-bandit flake8-bugbear flake8-builtins flake8-comprehensions flake8-deprecated flake8-isort flake8-print flake8-quotes flake8-todo
          pip install pylint
          pip install ruff
          pip install mypy
          
      - name: Check linting
        run: |
          pip install -r requirements.txt
          # ignore list:
          # F722: https://stackoverflow.com/questions/64909849/syntax-error-with-flake8-and-pydantic-constrained-types-constrregex
          # B008: FastAPI uses by design function calls in arguments for dependency injection
          echo flake8
          python -m flake8 --max-line-length 179 --ignore=F722,B008,I001,I004,I005 app
          echo pylint
          pylint app
          echo ruff check
          ruff check app
          echo ruff format
          ruff format --check app
          echo mypy
          mypy app

  python-version-support:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Check code
        run: |
          pip install --only-binary=:all: -r requirements.txt
          python -m compileall -q .

  spellcheck:
    name: Spell Check with Typos
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Actions Repository
      uses: actions/checkout@v5

    - name: Check spelling
      uses: crate-ci/typos@master
      with:
        files: .